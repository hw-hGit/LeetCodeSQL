
Table: Customers

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| name        | varchar |
+-------------+---------+
id is the primary key (column with unique values) for this table.
Each row of this table indicates the ID and name of a customer.
 

Table: Orders

+-------------+------+
| Column Name | Type |
+-------------+------+
| id          | int  |
| customerId  | int  |
+-------------+------+
id is the primary key (column with unique values) for this table.
customerId is a foreign key (reference columns) of the ID from the Customers table.
Each row of this table indicates the ID of an order and the ID of the customer who ordered it.
 

Write a solution to find all customers who never order anything.

Return the result table in any order.

The result format is in the following example.

Difficulty:
The problem entails identifying customers who have never placed any orders. This requires linking the "Customers" and "Orders" tables using the "customerId" relationship. 
The primary challenge involves distinguishing customers with no corresponding entries in the "Orders" table. Constructing an SQL query that properly joins, filters, and excludes customers who've made orders constitutes the main difficulty.

Solution:
To find customers who have never placed orders, use a LEFT JOIN between the "Customers" and "Orders" tables on the "customerId" column. 
Then, filter the results using a WHERE clause to only include rows where the "customerId" from the "Orders" table is NULL. This indicates customers without orders.

Code:
SELECT 
    c.name as Customers 
FROM 
    customers as c
LEFT JOIN   
    orders as o
ON
    c.id = o.customerid
WHERE
    o.customerid is null 
